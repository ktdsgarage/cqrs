apiVersion: v1
kind: ConfigMap
metadata:
  name: ${userid}-cqrs-config
  namespace: ${app_namespace}
data:
  APP_NAME: "cqrs"
  SERVER_PORT: "8080"

  # PostgreSQL 설정
  POSTGRES_HOST: "${userid}-postgres.${db_namespace}.svc.cluster.local"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "${postgres_db}"
  POSTGRES_USER: "${postgres_user}"

  # MongoDB 설정
  MONGODB_HOST: "${userid}-mongodb.${db_namespace}.svc.cluster.local"
  MONGODB_PORT: "27017"
  MONGODB_DB: "${mongodb_db}"
  MONGODB_USER: "${mongodb_user}"

  # Event Hub 설정
  EVENT_HUB_NS: "${event_hub_ns}"
  EVENT_HUB_NAME: "${event_hub_name}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-cqrs-command
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: command-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: command-service
        userid: ${userid}
    spec:
      containers:
      - name: command-service
        image: ${command_image_path}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: ${userid}-cqrs-config
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: postgres-password
        - name: EVENT_HUB_PLAN_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: plan-connection-string
        - name: EVENT_HUB_USAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: usage-connection-string
        - name: EVENT_HUB_PLAN_NAME
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: plan-hub-name
        - name: EVENT_HUB_USAGE_NAME
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: usage-hub-name
        - name: EVENT_HUB_CONSUMER_GROUP
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: consumer-group
        - name: STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: storage-secret
              key: connection-string
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-cqrs-query
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: query-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: query-service
        userid: ${userid}
    spec:
      containers:
      - name: query-service
        image: ${query_image_path}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: ${userid}-cqrs-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: mongo-password
        - name: EVENT_HUB_PLAN_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: plan-connection-string
        - name: EVENT_HUB_USAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: usage-connection-string
        - name: EVENT_HUB_PLAN_NAME
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: plan-hub-name
        - name: EVENT_HUB_USAGE_NAME
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: usage-hub-name
        - name: EVENT_HUB_CONSUMER_GROUP
          valueFrom:
            secretKeyRef:
              name: eventhub-secret
              key: consumer-group
        - name: STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: storage-secret
              key: connection-string
        - name: STORAGE_CONTAINER_NAME
          value: "${userid}-eventhub-checkpoints"
        - name: BLOB_CONTAINER_NAME
          value: "${userid}-eventhub-checkpoints"
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
---
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-cqrs-command
  namespace: ${app_namespace}
spec:
  selector:
    app: command-service
    userid: ${userid}
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-cqrs-query
  namespace: ${app_namespace}
spec:
  selector:
    app: query-service
    userid: ${userid}
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer