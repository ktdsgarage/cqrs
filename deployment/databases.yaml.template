apiVersion: v1
kind: Secret
metadata:
  name: ${userid}-db-credentials
  namespace: ${db_namespace}
type: Opaque
data:
  postgres-password: ${postgres_password_base64}
  mongo-password: ${mongo_password_base64}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${userid}-postgres-init-script
  namespace: ${db_namespace}
data:
  init.sql: |
    CREATE DATABASE telecomdb;  # fixed value
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${userid}-postgres
  namespace: ${db_namespace}
spec:
  serviceName: "${userid}-postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      userid: ${userid}
  template:
    metadata:
      labels:
        app: postgres
        userid: ${userid}
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: postgres  # fixed value
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
      volumes:
      - name: init-script
        configMap:
          name: ${userid}-postgres-init-script
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-postgres
  namespace: ${db_namespace}
spec:
  selector:
    app: postgres
    userid: ${userid}
  ports:
  - port: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${userid}-mongodb
  namespace: ${db_namespace}
spec:
  serviceName: "${userid}-mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
      userid: ${userid}
  template:
    metadata:
      labels:
        app: mongodb
        userid: ${userid}
    spec:
      containers:
      - name: mongodb
        image: mongo:6
        env:
        - name: MONGO_INITDB_DATABASE
          value: telecomdb  # fixed value
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root  # fixed value
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: mongo-password
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-mongodb
  namespace: ${db_namespace}
spec:
  selector:
    app: mongodb
    userid: ${userid}
  ports:
  - port: 27017
  type: ClusterIP